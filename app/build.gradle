plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0  // bump for dogfood builds, public betas, etc.


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "in.technowolf.ipscanner"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}" + (versionPatch == 0 ? "" : ".${versionPatch}")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures{
        viewBinding true
    }

    Properties properties = new Properties()
    def propertiesFile = project.rootProject.file('local.properties')
    if (propertiesFile.exists()) {
        properties.load(propertiesFile.newInputStream())
    }

    buildTypes {
        debug{
            minifyEnabled false
            debuggable true
            buildConfigField("String", "baseUrl", properties.getProperty("base.url"))
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "baseUrl", properties.getProperty("base.url"))
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Jetpack Emoji library, Downloadable and bundled both.
    implementation 'androidx.emoji:emoji:1.1.0'
    implementation 'androidx.emoji:emoji-bundled:1.1.0'

    // Koin main features for Android (Scope,ViewModel ...)
    implementation 'io.insert-koin:koin-android:3.0.2'

    // Retrofit for network calls
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // Okhttp as http client in retrofit
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'

    // Moshi to serialize and deserialize json response.
    implementation("com.squareup.moshi:moshi-kotlin:1.12.0")

    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.12.0")


    // Converter for Moshi to work with retrofit
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    // Chucker to intercept network calls, Works with okhttp client.b
    debugImplementation "com.github.chuckerteam.chucker:library:3.4.0"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:3.4.0"

    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.3.1'



}